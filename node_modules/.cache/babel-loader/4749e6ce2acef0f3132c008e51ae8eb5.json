{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLastItem = getLastItem;\nexports.isSameArrays = isSameArrays;\nexports.getTranslateX = getTranslateX;\nexports.getThresholdRange = getThresholdRange;\nexports.isInsideArray = isInsideArray;\nexports.syncLineHeightWithHeight = syncLineHeightWithHeight;\n\nfunction getLastItem(array) {\n  if (!Array.isArray(array) || array.length < 1) {\n    throw new Error('invalid parameter for getLastItem');\n  }\n\n  return array[array.length - 1];\n}\n/* A VERY simple comparasion, use only in array that owns only primiry-type entries */\n\n\nfunction isSameArrays(arr1, arr2) {\n  return arr1.join('') === arr2.join('');\n}\n/* Read the tranlateX value */\n\n\nfunction getTranslateX(string) {\n  var regExp = /translate\\((-?\\d+\\.?\\d*)px, 0px\\)/;\n  var matches = regExp.exec(string);\n  return Number(matches[1]);\n}\n\nfunction getThresholdRange(threshold, gear) {\n  var i = 0.5;\n  var tmp = [threshold];\n\n  while (gear > i) {\n    tmp.push(threshold + i);\n    i += 0.5;\n  }\n\n  return tmp;\n}\n\nfunction isInsideArray(array, item) {\n  return array.indexOf(item) > -1;\n}\n/* Assign value of viewBox height to its line-height */\n\n\nfunction syncLineHeightWithHeight(viewBoxStyle) {\n  var height = viewBoxStyle.height;\n\n  if (typeof height === 'undefined') {\n    return viewBoxStyle;\n  } else {\n    var tmp = Object.assign({}, viewBoxStyle);\n    tmp.lineHeight = height;\n    return tmp;\n  }\n}","map":{"version":3,"sources":["C:/Amit/amitapp/node_modules/react-marquee-line/dist/horizontal/helpers.js"],"names":["Object","defineProperty","exports","value","getLastItem","isSameArrays","getTranslateX","getThresholdRange","isInsideArray","syncLineHeightWithHeight","array","Array","isArray","length","Error","arr1","arr2","join","string","regExp","matches","exec","Number","threshold","gear","i","tmp","push","item","indexOf","viewBoxStyle","height","assign","lineHeight"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;AACAF,OAAO,CAACG,YAAR,GAAuBA,YAAvB;AACAH,OAAO,CAACI,aAAR,GAAwBA,aAAxB;AACAJ,OAAO,CAACK,iBAAR,GAA4BA,iBAA5B;AACAL,OAAO,CAACM,aAAR,GAAwBA,aAAxB;AACAN,OAAO,CAACO,wBAAR,GAAmCA,wBAAnC;;AAEA,SAASL,WAAT,CAAqBM,KAArB,EAA4B;AAC1B,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAD,IAAyBA,KAAK,CAACG,MAAN,GAAe,CAA5C,EAA+C;AAC7C,UAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,SAAOJ,KAAK,CAACA,KAAK,CAACG,MAAN,GAAe,CAAhB,CAAZ;AACD;AACD;;;AAGA,SAASR,YAAT,CAAsBU,IAAtB,EAA4BC,IAA5B,EAAkC;AAChC,SAAOD,IAAI,CAACE,IAAL,CAAU,EAAV,MAAkBD,IAAI,CAACC,IAAL,CAAU,EAAV,CAAzB;AACD;AACD;;;AAGA,SAASX,aAAT,CAAuBY,MAAvB,EAA+B;AAC7B,MAAIC,MAAM,GAAG,mCAAb;AACA,MAAIC,OAAO,GAAGD,MAAM,CAACE,IAAP,CAAYH,MAAZ,CAAd;AACA,SAAOI,MAAM,CAACF,OAAO,CAAC,CAAD,CAAR,CAAb;AACD;;AAED,SAASb,iBAAT,CAA2BgB,SAA3B,EAAsCC,IAAtC,EAA4C;AAC1C,MAAIC,CAAC,GAAG,GAAR;AACA,MAAIC,GAAG,GAAG,CAACH,SAAD,CAAV;;AAEA,SAAOC,IAAI,GAAGC,CAAd,EAAiB;AACfC,IAAAA,GAAG,CAACC,IAAJ,CAASJ,SAAS,GAAGE,CAArB;AACAA,IAAAA,CAAC,IAAI,GAAL;AACD;;AAED,SAAOC,GAAP;AACD;;AAED,SAASlB,aAAT,CAAuBE,KAAvB,EAA8BkB,IAA9B,EAAoC;AAClC,SAAOlB,KAAK,CAACmB,OAAN,CAAcD,IAAd,IAAsB,CAAC,CAA9B;AACD;AACD;;;AAGA,SAASnB,wBAAT,CAAkCqB,YAAlC,EAAgD;AAC9C,MAAIC,MAAM,GAAGD,YAAY,CAACC,MAA1B;;AAEA,MAAI,OAAOA,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAOD,YAAP;AACD,GAFD,MAEO;AACL,QAAIJ,GAAG,GAAG1B,MAAM,CAACgC,MAAP,CAAc,EAAd,EAAkBF,YAAlB,CAAV;AACAJ,IAAAA,GAAG,CAACO,UAAJ,GAAiBF,MAAjB;AACA,WAAOL,GAAP;AACD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLastItem = getLastItem;\nexports.isSameArrays = isSameArrays;\nexports.getTranslateX = getTranslateX;\nexports.getThresholdRange = getThresholdRange;\nexports.isInsideArray = isInsideArray;\nexports.syncLineHeightWithHeight = syncLineHeightWithHeight;\n\nfunction getLastItem(array) {\n  if (!Array.isArray(array) || array.length < 1) {\n    throw new Error('invalid parameter for getLastItem');\n  }\n\n  return array[array.length - 1];\n}\n/* A VERY simple comparasion, use only in array that owns only primiry-type entries */\n\n\nfunction isSameArrays(arr1, arr2) {\n  return arr1.join('') === arr2.join('');\n}\n/* Read the tranlateX value */\n\n\nfunction getTranslateX(string) {\n  var regExp = /translate\\((-?\\d+\\.?\\d*)px, 0px\\)/;\n  var matches = regExp.exec(string);\n  return Number(matches[1]);\n}\n\nfunction getThresholdRange(threshold, gear) {\n  var i = 0.5;\n  var tmp = [threshold];\n\n  while (gear > i) {\n    tmp.push(threshold + i);\n    i += 0.5;\n  }\n\n  return tmp;\n}\n\nfunction isInsideArray(array, item) {\n  return array.indexOf(item) > -1;\n}\n/* Assign value of viewBox height to its line-height */\n\n\nfunction syncLineHeightWithHeight(viewBoxStyle) {\n  var height = viewBoxStyle.height;\n\n  if (typeof height === 'undefined') {\n    return viewBoxStyle;\n  } else {\n    var tmp = Object.assign({}, viewBoxStyle);\n    tmp.lineHeight = height;\n    return tmp;\n  }\n}"]},"metadata":{},"sourceType":"script"}